{"version":3,"sources":["pages/Home.js","api/song.js","pages/Song/stronger.js","pages/Song/bonitaApplebum.js","pages/Song/dayAndNight.js","components/Appbar.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","marginTop","props","classes","className","require","getSong","songName","songLink","xmlHttpReq","XMLHttpRequest","open","send","responseText","StrongerPage","strongerLyric","Paper","style","padding","source","escapeHtml","BonitaAppleBumPage","BonitaAppleBumLyric","DayAndNightPage","dayAndNightLyric","history","createBrowserHistory","useStyles","makeStyles","toolbar","paddingRight","toolbarIcon","alignItems","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","spacing","breakpoints","up","drawerPaperCollapsed","appBarSpacer","content","height","container","paddingTop","paddingBottom","flexDirection","fixedHeight","footer","left","bottom","color","textAlign","fontStyle","Dashboard","React","useState","setOpen","collapsed","setCollapsed","setTitle","handleDrawerCollapsed","onItemClick","CssBaseline","AppBar","clsx","Toolbar","IconButton","edge","aria-label","onClick","Typography","component","variant","noWrap","Badge","badgeContent","Drawer","Divider","List","ListItem","button","Link","to","ListItemIcon","ListItemText","primary","exact","path","Home","Stronger","BonitaAppleBum","DayAndNight","App","Fragment","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9c02d252.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\",\n    backgroundColor: theme.palette.background.paper,\n    marginTop: '100px'\n  }\n});\n\nfunction Home(props) {\n  const { classes } = props;\n\n  return (\n      <div className={classes.root}>\n        <h1>Landing page</h1>\n      </div>\n  );\n}\n\nHome.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Home);\n","const axios = require('axios');\n\nfunction getSong(songName){\n    // get data from cache\n    var songLink = 'http://172.17.0.5/:5000/Music/' + songName ;\n    \n    let xmlHttpReq = new XMLHttpRequest();\n    xmlHttpReq.open(\"GET\", songLink, false); \n    xmlHttpReq.send(null);\n    return xmlHttpReq.responseText;\n}\n\nexport default getSong ;\n\n","import React from 'react'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport ReactMarkdown from 'react-markdown'\r\nimport getSong from '../../api/song'\r\nimport 'github-markdown-css'\r\n\r\nconst StrongerPage =  () => {\r\n  let strongerLyric =  getSong('Stronger');\r\n   // Reading data from the 'file.txt' file\r\n\r\n  return (\r\n\r\n    \r\n    <Paper>\r\n        <div style={{ backgroundColor: 'white', padding: 12 }}>\r\n          <ReactMarkdown\r\n            className=\"markdown-body\"\r\n            source={`Kanye West-Stronger`}\r\n            escapeHtml={true}\r\n          />\r\n        </div>\r\n\r\n        <div style={{ backgroundColor: 'white', padding: 12 }}>\r\n          <ReactMarkdown\r\n            className=\"markdown-body\"\r\n            source={strongerLyric}\r\n            escapeHtml={true}\r\n          />\r\n        </div>\r\n\r\n\r\n    </Paper>\r\n  )\r\n}\r\nexport default StrongerPage\r\n","import React from 'react'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport ReactMarkdown from 'react-markdown'\r\nimport getSong from '../../api/song'\r\nimport 'github-markdown-css'\r\n\r\nconst BonitaAppleBumPage =  () => {\r\n  let BonitaAppleBumLyric =  getSong('BonitaAppleBum');\r\n   // Reading data from the 'file.txt' file\r\n\r\n  return (\r\n\r\n    \r\n    <Paper>\r\n        <div style={{ backgroundColor: 'white', padding: 12 }}>\r\n          <ReactMarkdown\r\n            className=\"markdown-body\"\r\n            source={`Tribe called quested-Bonita Applebum `}\r\n            escapeHtml={true}\r\n          />\r\n        </div>\r\n\r\n        <div style={{ backgroundColor: 'white', padding: 12 }}>\r\n          <ReactMarkdown\r\n            className=\"markdown-body\"\r\n            source={BonitaAppleBumLyric}\r\n            escapeHtml={true}\r\n          />\r\n        </div>\r\n\r\n\r\n    </Paper>\r\n  )\r\n}\r\nexport default BonitaAppleBumPage\r\n","import React from 'react'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport ReactMarkdown from 'react-markdown'\r\nimport getSong from '../../api/song'\r\nimport 'github-markdown-css'\r\n\r\nconst DayAndNightPage =  () => {\r\n  let dayAndNightLyric =  getSong('DayAndNight');\r\n   // Reading data from the 'file.txt' file\r\n\r\n  return (\r\n\r\n    \r\n    <Paper>\r\n        <div style={{ backgroundColor: 'white', padding: 12 }}>\r\n          <ReactMarkdown\r\n            className=\"markdown-body\"\r\n            source={`Kid Cudi -Day and Night`}\r\n            escapeHtml={true}\r\n          />\r\n        </div>\r\n\r\n        <div style={{ backgroundColor: 'white', padding: 12 }}>\r\n          <ReactMarkdown\r\n            className=\"markdown-body\"\r\n            source={dayAndNightLyric}\r\n            escapeHtml={true}\r\n          />\r\n        </div>\r\n\r\n\r\n    </Paper>\r\n  )\r\n}\r\nexport default DayAndNightPage\r\n","import React from 'react';\nimport clsx from 'clsx';\nimport { Router, Route, Link } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Badge from '@material-ui/core/Badge';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MusicNoteIcon from '@material-ui/icons/MusicNote';\n\n// import your components:\nimport Home from \"../pages/Home\";\nimport Stronger from \"../pages/Song/stronger\";\nimport BonitaAppleBum from \"../pages/Song/bonitaApplebum\";\nimport DayAndNight from \"../pages/Song/dayAndNight\";\n\nconst drawerWidth = 240;\nconst history = createBrowserHistory();\n\n// css\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  drawerPaperCollapsed: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(0),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(0),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n  footer: {\n    position: 'fixed',\n    left: 0,\n    bottom: 0,\n    width: '100%',\n    backgroundColor: 'grey',\n    color: 'white',\n    textAlign: 'center',\n    fontStyle: 'italic',\n  },\n}));\n\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const [collapsed, setCollapsed] = React.useState(false);\n  const [title, setTitle] = React.useState('Home');\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n    setCollapsed(false);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n    setCollapsed(false);\n  };\n  const handleDrawerCollapsed = () => {\n    setCollapsed(true);\n    setOpen(false);\n  };\n  const onItemClick = title => () => {\n    setTitle(title);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n\n      {/* This is the header AppBar */}\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, \n          open && classes.appBarShift, collapsed && classes.appBar)}>\n        <Toolbar title={title} className={classes.toolbar}>\n\n          {/* The Menu icon exposes the left pane menu bar */}\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n\n          {/* The title is set by the components */}\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            {title}\n          </Typography>\n\n          {/* For kicks */}\n          <IconButton color=\"inherit\">\n            <Badge badgeContent={2} color=\"secondary\">\n              <NotificationsIcon />\n            </Badge>\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n\n      {/* The Router component routes URLs to your components */}\n      <Router history={history} title={title} >\n\n        {/* Drawers are left pane menu items in React-speak */}\n        <Drawer\n          variant=\"permanent\"\n          classes={{\n            paper: clsx(classes.drawerPaper, \n              !open && classes.drawerPaperClose,\n              collapsed && classes.drawerPaperCollapsed)\n          }}\n          open={open}\n        >\n          <div className={classes.toolbarIcon}>\n\n            {/* This icon collapses the left pane enough to show menu item icons */}\n            <IconButton onClick={handleDrawerClose}>\n              <ChevronLeftIcon />\n            </IconButton>\n          </div>\n          <Divider />\n\n          {/* Left pane menu items */}\n          <List>\n\n            {/* Song menu item */}\n            <ListItem button component={Link} to=\"/stronger\" onClick={onItemClick('Stronger')}>\n              <ListItemIcon>\n                <MusicNoteIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Stronger\" />\n              { title === 'Stronger' && \n                <ListItemIcon>\n                  <IconButton onClick={handleDrawerCollapsed}>\n                    <ChevronLeftIcon />\n                  </IconButton>\n                </ListItemIcon>\n              }\n            </ListItem>\n\n            {/* Song menu item */}\n           <ListItem button component={Link} to=\"/dayAndNight\" onClick={onItemClick('DayAndNight')}>\n              <ListItemIcon>\n                <MusicNoteIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"DayAndNight\" />\n              { title === 'DayAndNight' && \n                <ListItemIcon>\n                  <IconButton onClick={handleDrawerCollapsed}>\n                    <ChevronLeftIcon />\n                  </IconButton>\n                </ListItemIcon>\n              }\n            </ListItem>\n\n            {/* Song menu item */}\n            <ListItem button component={Link} to=\"/bonitaAppleBum\" onClick={onItemClick('BonitaAppleBum')}>\n              <ListItemIcon>\n                <MusicNoteIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"BonitaAppleBum\" />\n              { title === 'BonitaAppleBum' && \n                <ListItemIcon>\n                  <IconButton onClick={handleDrawerCollapsed}>\n                    <ChevronLeftIcon />\n                  </IconButton>\n                </ListItemIcon>\n              }\n            </ListItem>\n          </List>\n          \n\n        </Drawer>\n\n        {/* This is your mission control: Matches URLs above to your components */}\n        <main className={classes.content}>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/stronger\" component={Stronger} />\n          <Route path=\"/bonitaAppleBum\" component={BonitaAppleBum} />\n          <Route path=\"/dayAndNight\" component={DayAndNight} />\n        </main>\n      </Router>\n      \n      {/* Whatever you put here will appear on all your pages, style appropriately! */}\n      <div className={classes.footer}>\n        <p>MIT License, dinorows@gmail.com 2020</p>\n      </div>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Appbar from './components/Appbar.js';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <Appbar />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App; \n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}